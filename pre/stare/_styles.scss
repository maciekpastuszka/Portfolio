/*=============================================
Mixins
=============================================*/

html {
   font-size: 16px; 
}



/**
RWD
*/
$rwd-small: 48em;
$rwd-medium: 62em;
$rwd-large: 75em;

@mixin rwd($width) {
    @if $width==small {
        @media only screen and (min-width: $rwd-small) {
            @content;
        }
    }
    @else if $width==medium {
        @media only screen and (min-width: $rwd-medium) {
            @content;
        }
    }
    @else if $width==large {
        @media only screen and (min-width: $rwd-large) {
            @content;
        }
    }
}


/**
Retina
*/

@mixin retina($file, $type, $width, $height) {
    background-image: url('../img/' + $file + '.' + $type);
    @media (min-device-pixel-ratio: 1.5), (min-resolution: 1.5dppx) {
        & {
            background-image: url('../img/' + $file + '-2x.' + $type);
            background-size: $width $height;
        }
    }
}


/**
Section background
*/

@mixin section-bg($file,
$type) {
    background-image: url('../img/' + $file + '.' + $type);
    background-size: cover;
    background-attachment: fixed;
    @include rwd(small) {
        background-image: url('../img/' + $file + '-t.' + $type);
        background-size: cover;
        background-attachment: fixed;
    }
    @include rwd(large) {
        background-image: url('../img/' + $file + '-d.' + $type);
        background-size: cover;
        background-attachment: fixed;
    }
}

/*=============================================
Grid
=============================================*/

.container {
   /* max-width: 100%;
    margin: 0 auto;
    box-sizing: border-box;
    @include rwd(small) {
        max-width: $rwd-small - 50px;
    }
    @include rwd(medium) {
        max-width: $rwd-medium - 50px;
    }
    @include rwd(large) {
        max-width: $rwd-large - 50px;
    }*/
    &:after {
        clear: both;
        content: '';
        display: table;
    }/*
    &--flex {
        display: flex;
        flex-direction: row;
        align-content: space-between;
        flex-wrap: wrap;
    }*/
}


.grid__element {
    background: gray;
    padding: 10px;
}

.element {
    background: red;
    width: 1000px;
}

.element2 {
    background: blue;
    width: 62.5em;
}

$cels: 12;
$i: 1;
$sum: '.m-1, .t-1, .d-1,';
@while $i <=$cels {
    $sum: $sum #{'.m-'}#{$i}#{', '} #{' .t-'}#{$i}#{', '} #{' .d-'}#{$i}#{', '};
    $i: $i + 1;
}

#{$sum} {
    float: left;
    padding: 0 15px;
    box-sizing: border-box;
}

@for $i from 1 through $cels {
    .m-#{$i} {
        width: (100% / 12) * $i;
    }
}

@include rwd(small) {
    @for $i from 1 through $cels {
        .t-#{$i} {
            width: (100% / 12) * $i;
        }
    }
}

@include rwd(medium) {
    @for $i from 1 through $cels {
        .d-#{$i} {
            width: (100% / 12) * $i;
        }
    }
}

@include rwd(large) {
    @for $i from 1 through $cels {
        .l-#{$i} {
            width: (100% / 12) * $i;
        }
    }
}